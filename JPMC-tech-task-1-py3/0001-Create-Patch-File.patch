From 074d30c1babf8d067e46fe0255d5524f8a01564e Mon Sep 17 00:00:00 2001
From: Christopher-Polloni <pollonichristopher@gmail.com>
Date: Sat, 14 Nov 2020 16:11:30 -0500
Subject: [PATCH] Create Patch File

---
 .vscode/settings.json        |  3 ++
 0001-Create-Patch-File.patch | 85 ++++++++++++++++++++++++++++++++++++
 client_test.py               | 25 +++++++++++
 3 files changed, 113 insertions(+)
 create mode 100644 .vscode/settings.json
 create mode 100644 0001-Create-Patch-File.patch

diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..3516cb9
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,3 @@
+{
+    "python.formatting.provider": "autopep8"
+}
\ No newline at end of file
diff --git a/0001-Create-Patch-File.patch b/0001-Create-Patch-File.patch
new file mode 100644
index 0000000..d5b770b
--- /dev/null
+++ b/0001-Create-Patch-File.patch
@@ -0,0 +1,85 @@
+From d42edf44575d4572f069f21d498e81476c83a853 Mon Sep 17 00:00:00 2001
+From: Christopher-Polloni <pollonichristopher@gmail.com>
+Date: Sat, 14 Nov 2020 15:52:07 -0500
+Subject: [PATCH] Create Patch File
+
+---
+ client3.py     | 10 +++++++---
+ client_test.py | 11 +++++++++--
+ 2 files changed, 16 insertions(+), 5 deletions(-)
+
+diff --git a/client3.py b/client3.py
+index f1771c3..037341a 100644
+--- a/client3.py
++++ b/client3.py
+@@ -35,14 +35,16 @@ def getDataPoint(quote):
+ 	stock = quote['stock']
+ 	bid_price = float(quote['top_bid']['price'])
+ 	ask_price = float(quote['top_ask']['price'])
+-	price = bid_price
++	price = (bid_price+ask_price) / 2
+ 	return stock, bid_price, ask_price, price
+ 
+ def getRatio(price_a, price_b):
+ 	""" Get ratio of price_a and price_b """
+ 	""" ------------- Update this function ------------- """
+ 	""" Also create some unit tests for this function in client_test.py """
+-	return 1
++	if (price_b == 0):
++		return
++	return price_a/price_b
+ 
+ # Main
+ if __name__ == "__main__":
+@@ -52,8 +54,10 @@ if __name__ == "__main__":
+ 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+ 
+ 		""" ----------- Update to get the ratio --------------- """
++		prices = {}
+ 		for quote in quotes:
+ 			stock, bid_price, ask_price, price = getDataPoint(quote)
++			prices[stock] = price
+ 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+ 
+-		print ("Ratio %s" % getRatio(price, price))
++		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
+diff --git a/client_test.py b/client_test.py
+index af2bf26..0760e38 100644
+--- a/client_test.py
++++ b/client_test.py
+@@ -1,5 +1,5 @@
+ import unittest
+-from client3 import getDataPoint
++from client3 import getDataPoint, getRatio
+ 
+ class ClientTest(unittest.TestCase):
+   def test_getDataPoint_calculatePrice(self):
+@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
++    for quote in quotes:
++      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+ 
+   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+     quotes = [
+@@ -15,10 +17,15 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
+-
++    for quote in quotes:
++      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+ 
+   """ ------------ Add more unit tests ------------ """
++  def test_getRatio_calculateRatioAgainstLess(self):
++      self.assertGreater(getRatio(143.53, 68.25), 1)
+ 
++  def test_getRatio_calculateRatioAgainstGreater(self):
++      self.assertLess(getRatio(121.43, 140.56), 1)
+ 
+ 
+ if __name__ == '__main__':
+-- 
+2.27.0.windows.1
+
diff --git a/client_test.py b/client_test.py
index 0760e38..edcf9f2 100644
--- a/client_test.py
+++ b/client_test.py
@@ -27,6 +27,31 @@ class ClientTest(unittest.TestCase):
   def test_getRatio_calculateRatioAgainstGreater(self):
       self.assertLess(getRatio(121.43, 140.56), 1)
 
+  def test_getRatio_priceAZero(self):
+      price_a = 0
+      price_b = 113.75
+      self.assertIsNone(getRatio(price_a, price_b))
+ 
+  def test_getRatio_priceBZero(self):
+      price_a = 154.78
+      price_b = 0
+      self.assertEqual(getRatio(price_a, price_b), 0)
+ 
+  def test_getRatio_greaterThan1(self):
+      price_a = 346.48
+      price_b = 166.39
+      self.assertGreater(getRatio(price_a, price_b), 1)
+
+  def test_getRatio_LessThan1(self):
+      price_a = 166.39
+      price_b = 356.48
+      self.assertLess(getRatio(price_a, price_b), 1)
+
+  def test_getRatio_exactlyOne(self):
+    price_a = 356.48
+    price_b = 356.48
+    self.assertEqual(getRatio(price_a, price_b), 1)
+
 
 if __name__ == '__main__':
     unittest.main()
-- 
2.27.0.windows.1

